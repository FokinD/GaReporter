<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="FileNameTooltip" xml:space="preserve">
    <value>Supported file extensions: *.xlsx, *.xml, *.json.</value>
  </data>
  <data name="TitleLabel" xml:space="preserve">
    <value>title:</value>
  </data>
  <data name="StartDateTooltip" xml:space="preserve">
    <value>Start date for fetching Analytics data. Requests can specify a start date formatted as YYYY-MM-DD, or as a relative date (e.g., today, yesterday, or NdaysAgo where N is a positive integer).</value>
  </data>
  <data name="MetricsTooltip" xml:space="preserve">
    <value>A list of comma-separated metrics, such as ga:sessions,ga:bounces.</value>
  </data>
  <data name="EndDateTooltip" xml:space="preserve">
    <value>End date for fetching Analytics data. Request can specify an end date formatted as YYYY-MM-DD, or as a relative date (e.g., today, yesterday, or NdaysAgo where N is a positive integer).</value>
  </data>
  <data name="DimensionsTooltip" xml:space="preserve">
    <value>A list of comma-separated dimensions for your Analytics data, for example: ga:medium,ga:source.</value>
  </data>
  <data name="FiltersTooltip" xml:space="preserve">
    <value>Dimension or metric filters that restrict the data returned for your request.</value>
  </data>
  <data name="SegmentTooltip" xml:space="preserve">
    <value>Segments the data returned for your request.</value>
  </data>
  <data name="SortTooltip" xml:space="preserve">
    <value>A list of comma-separated dimensions and metrics indicating the sorting order and sorting direction for the returned data.</value>
  </data>
  <data name="MaxResultsTooltip" xml:space="preserve">
    <value>The maximum number of rows to include in the response. 1 000 if empty, up to 1 048 575 in Excel and no limit in all other output formats.</value>
  </data>
  <data name="DesampleTooltip" xml:space="preserve">
    <value>Toggle this to reduce data sampling.</value>
  </data>
  <data name="TitleTooltip" xml:space="preserve">
    <value>Title. Used as a worksheet name in export to Excel.</value>
  </data>
  <data name="DesampleLabel" xml:space="preserve">
    <value>desample:</value>
  </data>
  <data name="DimensionsLabel" xml:space="preserve">
    <value>dimensions:</value>
  </data>
  <data name="EndDateLabel" xml:space="preserve">
    <value>end-date:</value>
  </data>
  <data name="FileNameLabel" xml:space="preserve">
    <value>file:</value>
  </data>
  <data name="FiltersLabel" xml:space="preserve">
    <value>filters:</value>
  </data>
  <data name="MaxResultsLabel" xml:space="preserve">
    <value>max-results:</value>
  </data>
  <data name="MetricsLabel" xml:space="preserve">
    <value>metrics:</value>
  </data>
  <data name="SegmentLabel" xml:space="preserve">
    <value>segment:</value>
  </data>
  <data name="SortLabel" xml:space="preserve">
    <value>sort:</value>
  </data>
  <data name="StartDateLabel" xml:space="preserve">
    <value>start-date:</value>
  </data>
  <data name="OpenBigButtonText" xml:space="preserve">
    <value>Open file</value>
  </data>
  <data name="SaveButtonTooltip" xml:space="preserve">
    <value>Save changes</value>
  </data>
  <data name="RefreshBigButtonText" xml:space="preserve">
    <value>Execute request</value>
  </data>
  <data name="OpenButtonTooltip" xml:space="preserve">
    <value>Open file</value>
  </data>
  <data name="OpenBigButtonTooltip" xml:space="preserve">
    <value>Open file</value>
  </data>
  <data name="RefreshBigButtonTooltip" xml:space="preserve">
    <value>Execute request</value>
  </data>
  <data name="RefreshButtonTooltip" xml:space="preserve">
    <value>Execute request</value>
  </data>
  <data name="AddNewButtonTooltip" xml:space="preserve">
    <value>Add new request</value>
  </data>
  <data name="RemoveButtonTooltip" xml:space="preserve">
    <value>Remove request</value>
  </data>
  <data name="CloneButtonTooltip" xml:space="preserve">
    <value>Clone request</value>
  </data>
  <data name="ReloadButtonTooltip" xml:space="preserve">
    <value>Discard all changes</value>
  </data>
  <data name="OptionsButtonTooltip" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="OptionsKeyPathLabel" xml:space="preserve">
    <value>Key Path:</value>
  </data>
  <data name="OptionsAccountEmailAddressLabel" xml:space="preserve">
    <value>Account Email Address:</value>
  </data>
  <data name="OptionsIDsLabel" xml:space="preserve">
    <value>IDs:</value>
  </data>
  <data name="OptionsOKButtonText" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="OptionsTitle" xml:space="preserve">
    <value>Options - {0}</value>
  </data>
  <data name="DataTableSaveAsArgumentException" xml:space="preserve">
    <value>Supported only followed extensions: {0}</value>
  </data>
  <data name="RefreshSuccessMessage1" xml:space="preserve">
    <value>processed successfully</value>
  </data>
  <data name="SaveErrorMessage" xml:space="preserve">
    <value>File not saved. Try again?</value>
  </data>
  <data name="RefreshSuccessMessage0" xml:space="preserve">
    <value>Request</value>
  </data>
  <data name="RefreshErrorMessage" xml:space="preserve">
    <value>There has been an error processing your request</value>
  </data>
  <data name="OptionsAccountEmailAddressLabelTooltip" xml:space="preserve">
    <value>Email Address from Google Analytics account.</value>
  </data>
  <data name="OptionsIDsLabelTooltip" xml:space="preserve">
    <value>IDs from Google Analytics account.</value>
  </data>
  <data name="OptionsKeyPathLabelTooltip" xml:space="preserve">
    <value>Full path to file with *.p12 extension recieved from Google Analytics account.</value>
  </data>
  <data name="SaveAsButtonTooltip" xml:space="preserve">
    <value>Save as...</value>
  </data>
  <data name="AddNewFolder" xml:space="preserve">
    <value>Add new folder</value>
  </data>
  <data name="RemoveFolder" xml:space="preserve">
    <value>Remove folder</value>
  </data>
  <data name="CloneFolder" xml:space="preserve">
    <value>Clone folder</value>
  </data>
  <data name="FolderDetails" xml:space="preserve">
    <value>Show folders details</value>
  </data>
  <data name="RunFolder" xml:space="preserve">
    <value>Run all folders requests</value>
  </data>
  <data name="OpenDocumentButtonTooltip" xml:space="preserve">
    <value>Open document</value>
  </data>
  <data name="FoldersTitle" xml:space="preserve">
    <value>Folders - {0}</value>
  </data>
  <data name="RefreshFolderBigButtonTooltip" xml:space="preserve">
    <value>Execute all requests in folder</value>
  </data>
  <data name="RefreshFolderBigButtonText" xml:space="preserve">
    <value>Execute all</value>
  </data>
  <data name="RefreshFolderButtonTooltip" xml:space="preserve">
    <value>Execute all requests in folder</value>
  </data>
  <data name="AddNewFolderButtonTooltip" xml:space="preserve">
    <value>Add new folder</value>
  </data>
  <data name="RemoveFolderButtonTooltip" xml:space="preserve">
    <value>Remove folder</value>
  </data>
  <data name="CloneFolderButtonTooltip" xml:space="preserve">
    <value>Clone folder</value>
  </data>
  <data name="FoldersPage" xml:space="preserve">
    <value>FOLDERS</value>
  </data>
  <data name="ProjectPage" xml:space="preserve">
    <value>PROJECT</value>
  </data>
  <data name="RequestsPage" xml:space="preserve">
    <value>REQUESTS</value>
  </data>
  <data name="FullUpdateLabel" xml:space="preserve">
    <value>full update:</value>
  </data>
  <data name="FullUpdateTooltip" xml:space="preserve">
    <value>Uncheck, if you want actualize last values only.</value>
  </data>
</root>